# Default values for ascending-jarvis.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Global settings
global:
  environment: dev  # or staging, development, etc.



# External Secrets settings
external-secrets:
  install: false

# Jarvis main application
jarvis:
  image:
    repository: 897729109735.dkr.ecr.us-east-1.amazonaws.com/ascending-jarvis_jarvis_api
    tag: asc0.0.3
  env:
    remoteRef: das-jarvis/jarvis-env         # The key in AWS Secrets Manager
    keys:
      - ALLOW_SHARED_LINKS
      - ALLOW_SHARED_LINKS_PUBLIC
      - CONSOLE_JSON
      - DEBUG_CONSOLE
      - DEBUG_LOGGING
      - DEBUG_PLUGINS
      - DOMAIN_CLIENT
      - DOMAIN_SERVER
      - EMAIL_ENCRYPTION
      - EMAIL_FROM
      - EMAIL_FROM_NAME
      - EMAIL_HOST
      - EMAIL_PASSWORD
      - EMAIL_PORT
      - EMAIL_SERVICE
      - EMAIL_USERNAME
      - ENDPOINTS
      - GOOGLE_CALLBACK_URL
      - GOOGLE_CLIENT_ID
      - GOOGLE_CLIENT_SECRET
      - HOST
      - MEILI_HOST
      - MEILI_NO_ANALYTICS
      - NO_INDEX
      - PORT
      - RAG_API_URL
      - RAG_PORT
      - SEARCH
      - MONGO_URI
      - AWS_BUCKET_NAME
      - DB_HOST
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - ANALYTICS_GTM_ID
      - OPENAI_API_KEY
      - OPENAI_MODELS
      - OPENAI_SUMMARIZE
      - OPENAI_SUMMARY_MODEL
      - OPENAI_ORGANIZATION
      - CREDS_KEY
      - CREDS_IV
      - OPENID_CLIENT_ID
      - OPENID_CLIENT_SECRET
      - OPENID_ISSUER
      - OPENID_SESSION_SECRET
      - OPENID_SCOPE
      - OPENID_CALLBACK_URL
      - OPENID_REQUIRED_ROLE_TOKEN_KIND
      - OPENID_USERNAME_CLAIM
      - OPENID_BUTTON_LABEL
      - OPENID_IMAGE_URL
      - RAG_OPENAI_API_KEY
      - RAG_USE_FULL_CONTEXT
      - ALLOW_EMAIL_LOGIN
      - ALLOW_REGISTRATION
      - ALLOW_SOCIAL_LOGIN
      - ALLOW_SOCIAL_REGISTRATION
      - ALLOW_PASSWORD_RESET
      - ALLOW_ACCOUNT_DELETION
      - ALLOW_UNVERIFIED_EMAIL_LOGIN
      - MEILI_MASTER_KEY
      - JWT_SECRET
      - JWT_REFRESH_SECRET
      - APP_TITLE
      - CUSTOM_FOOTER
      - HELP_AND_FAQ_URL
      - OPENID_NAME_CLAIM
      - BEDROCK_AWS_DEFAULT_REGION
      - BEDROCK_AWS_MODELS
      - OPENAI_TITLE_MODEL
      - TITLE_CONVO
      - GOOGLE_SEARCH_API_KEY
      - GOOGLE_CSE_ID
      - ANTHROPIC_API_KEY
      - ANTHROPIC_MODELS
      - ANTHROPIC_TITLE_MODEL
      - AI_MODERATION
      - AI_MODERATION_API_URL
      - BEDROCK_AWS_KB_ID
      - WEAVIATE_HOST
      - WEAVIATE_PORT
      - AUTHENTICATION_APIKEY_ENABLED
      - AUTHENTICATION_APIKEY_ALLOWED_KEYS
      - AUTHENTICATION_APIKEY_USERS
      - AUTHORIZATION_ADMINLIST_ENABLED
      - AUTHORIZATION_ADMINLIST_USERS
      - AUTHORIZATION_ADMINLIST_READONLY_USERS
      - WEAVIATE_HOSTNAME
      - ENABLE_MODULES
      - IMAGE_INFERENCE_API
      - CLIP_INFERENCE_API
      - CLUSTER_HOSTNAME
      - PERSISTENCE_DATA_PATH
      - QUERY_DEFAULTS_LIMIT
      - QUERY_MAXIMUM_RESULTS
      - LOG_LEVEL
      - OPENAI_APIKEY
      - RAG_EMBEDDINGS_PROVIDER
      - RAG_EMBEDDINGS_MODEL
      - RAG_EMBEDDINGS_MODEL_VERSION
      - DALLE3_API_KEY
      - OPENID_REUSE_TOKENS
      - SESSION_EXPIRY
      - REFRESH_TOKEN_EXPIRY
      - RAG_MSSQL_SCHEME
      - RAG_MSSQL_HOST
      - RAG_MSSQL_PORT
      - RAG_MSSQL_USER
      - RAG_MSSQL_PASSWORD
      - RAG_MSSQL_DBNAME
      - REDIS_HOST
      - REDIS_PORT
      - RAG_MSSQL_SCHEMA
      - RAG_ONLY_SYS_TABLES_NAME
      - RAG_MSSQL_CHECKSUM_STRATEGY
      - RAG_INCLUDE_VIEWS
      - AWS_REGION
  
  # ConfigMap settings
  config:
    version: 1.2.8
    cache: true
    fileStrategy: "s3"
    filteredTools:
      - "traversaal_search"
      - "web-browser"
      - "serpapi"
      - "tavily_search_results_json"
      - "azure-ai-search"
      - "open_weather"
      - "flux"
      - "image_gen_oai"
      - "wolfram"
      - "dalle"
      - "stable-diffusion"
      - "bedrock_knowledge_base"
    interface:
      # Privacy policy settings
      privacyPolicy:
        externalUrl: 'https://app.termly.io/policy-viewer/policy.html?policyUUID=0c91586e-1d8d-489e-83af-70b343467a34'
        openNewTab: true

      # Terms of service
      termsOfService:
        externalUrl: 'https://app.termly.io/policy-viewer/policy.html?policyUUID=c5f9adb5-4979-4c41-81de-904f87321a4e'
        openNewTab: true
        modalAcceptance: true
        modalTitle: "Terms of Service for Jarvis"
        modalContent: |
          
          ## 1. Internal use
          It's up for DAS to customize

      endpointsMenu: true
      modelSelect: true
      parameters: true
      sidePanel: true
      presets: true
      prompts: true
      bookmarks: true
      multiConvo: false
      agents: true
      runCode: false
      webSearch: false
      knowledgebase:
        - icon: "db"
          label: "Database"
    endpoints:
      agents:
        recursionLimit: 50
        maxRecursionLimit: 100
        disableBuilder: false  
        capabilities: 
          - "file_search"
          - "actions"
          - "tools"
          - "artifacts"
          - "ocr"
          - "chain"
    fileConfig:
      endpoints:
        default:
          fileSizeLimit: 10
          fileLimit: 6
          totalSizeLimit: 50
      avatarSizeLimit: 2  # Limit for user avatar image size in MB
    balance:
      enabled: false

ragApi:
  enabled: true
  image:
    repository: 897729109735.dkr.ecr.us-east-1.amazonaws.com/ascending-jarvis_llama_index
    tag: latest                       # Change the tag if needed, keep it consistent with the celery image tag
    #pullPolicy: Always
  service:
    port: 8000

LlamaIndex:
  weaviate:
    create: true
    nodeSelector:
      eks.amazonaws.com/capacityType: ON_DEMAND
  multi2vecClip:
    create: true
    nodeSelector:
      eks.amazonaws.com/capacityType: ON_DEMAND
  redis:
    create: true
  celery:
    create: true
    replicas: 3
    image:
      tag: latest                      # Change the tag if needed, keep it consistent with the ragApi image tag
    resources:
      requests:
        memory: "4Gi"
        cpu: "3000m"
      limits:
        memory: "4Gi"
        cpu: "3000m"


mongodb:
  nodeSelector:
    eks.amazonaws.com/capacityType: ON_DEMAND

meilisearch:
  masterKey: "31223118e30d581d3a9722d1ecd4a8b7"     # Replace with the generated Meilisearch master key
  nodeSelector:
    eks.amazonaws.com/capacityType: ON_DEMAND

guardrailsApi:
  enabled: false

# Secret Store configuration
secretStore:
  aws:
    region: us-west-2                # Change to your desired AWS region

storageClass:
  create: true
  name: ebs-sc

# Ingress configuration
ingress:
  enabled: true
  className: aws-load-balancer
  annotations:
    alb.ingress.kubernetes.io/subnets: 'subnet-03fe284a1dbac6473, subnet-0c3ff3924b8e8d2ad'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:570277181188:certificate/7b05e079-4f4c-43e2-8145-35d11914b4c0
  hosts:
    - host: aipoc.digitalairstrike.dev
      paths:
        - path: /
          pathType: Prefix
          backend:
            service: jarvis-api-service
            port: 3080

# Service accounts
serviceAccounts:
  jarvis:
    create: true
    name: jarvis-service-account
    annotations:
      eks.amazonaws.com/role-arn: "arn:aws:iam::570277181188:role/jarvis-api-role"
  qBusiness:
    create: false
